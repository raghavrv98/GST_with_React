:root {
    --primaryColor: #000000;
    --secondaryColor: #dc3545;
    --contentColor: #757575;
    --textColor: #4a4a4a;
    --tableHeadingBackground: #EEEEEE;
    --tableHeadingTextColor: #4a4a4a;
    --borderColor: #dddddd;
    --labelColor: #ffffff;
}

body {
    padding: 0;
    font-family: 'Roboto', sans-serif !important;
}

#app {
    transition: all 0.2s;
    height: auto
}

* {
    box-sizing: border-box !important;
}

.text-right {
    text-align: right;
}

.border {
    border-top: 1px solid transparent;
    margin: 8px 0;
}

.mr-l-10 {
    margin-left: 10px;
}

.pd-t-4 {
    padding-top: 4px !important;
}

.flex {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
}

.fx-b20 {
    flex: 0 0 20%;
    max-width: 20%;
}

.fx-b25 {
    flex: 0 0 25%;
    max-width: 25%;
}

.fx-b80 {
    flex: 0 0 80%;
    max-width: 80%;
}

.btn {
    outline: none !important;
    font-size: 14px;
    position: relative;
    cursor: pointer;
}

.btn:hover, .btn:focus {
    box-shadow: none;
}

.btn-danger {
    border-radius: 35px;
    padding: 10px 20px;
    background-color: var(--secondaryColor);
    border: 2px solid var(--secondaryColor);
    color: white;
    transition: all ease-in-out 0.4s;
}

.btn-danger:hover {
    border-color: var(--secondaryColor);
    background-color: #ffffff;
    color: var(--secondaryColor);
    box-shadow: 0 5px 5px rgba(0, 0, 0, 0.15);
    transition: all ease-in-out 0.4s;
    transform: translateX(2px);
}

.btn-secondary {
    border-radius: 35px;
    padding: 10px 20px;
    background-color: #6c757d;
    border: 2px solid #6c757d;
    color: white;
    transition: all ease-in-out 0.4s;
}

.btn-secondary:hover {
    border-color: #6c757d;
    background-color: #ffffff;
    color: #6c757d;
    box-shadow: 0 5px 5px rgba(0, 0, 0, 0.15);
    transition: all ease-in-out 0.4s;
    transform: translateX(2px);
}

.btn-create {
    border-radius: 50%;
    height: 28px;
    width: 28px;
    position: relative;
    font-size: 14px;
    background-color: var(--secondaryColor);
    border: 2px solid var(--secondaryColor);
    color: var(--labelColor);
    box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.02);
    transition: all ease-in-out 0.4s;
    cursor: pointer;
}

.btn-create:hover {
    border-color: var(--secondaryColor);
    background-color: #ffffff;
    color: var(--secondaryColor);
    box-shadow: 0 5px 5px rgba(0, 0, 0, 0.15);
    transition: all ease-in-out 0.4s;
    transform: translateY(-2px);
}

.btn-create i {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.btn-customToggleGroup {
    display: inline-block;
    border-radius: 30px;
    padding: 4px;
    border: 2px solid var(--borderColor);
}

.btn-customToggleGroup .btn-toggle {
    text-transform: capitalize;
    color: var(--textColor);
    border-radius: 50px;
    font-size: 13px;
    min-width: 80px;
    font-weight: 900;
    background-color: white;
    outline: none !important;
    box-shadow: none;
    border: none;
    padding: 8px 10px;
    z-index: 1;
    cursor: pointer;
}

.btn-customToggleGroup .btn-toggle.active {
    background: var(--secondaryColor);
    color: var(--labelColor);
    transition: .35s ease;
    box-shadow: 1px 1px 8px rgba(0, 0, 0, 0.1);
}

.btn-transparent {
    padding: 0 5px;
    background-color: transparent;
    position: relative;
    text-align: center;
    transition: all ease-in-out 0.3s;
    margin-right: 7px;
    border-radius: 6px;
    border: none
}

.btn-transparent i {
    font-size: 16px;
}

.btn-transparent:hover {
    cursor: pointer;
    transition: all ease-in-out 0.3s;
    transform: translateY(-2px);
    box-shadow: 0 5px 0 rgba(0, 0, 0, 0.1);
    border-radius: 3px;
    cursor: pointer;
}

.text-primary {
    color: #007bff!important;
}

.outerBox {
    padding: 60px 10px 20px;
}

.pageBreadcrumb {
    background-color: black;
    position: fixed;
    top: 0px;
    left: 0px;
    right: 0px;
    padding: 12px 20px 13px;
    z-index: 2;
}

.pageBreadcrumb p {
    margin: 0;
    text-transform: capitalize;
    color: white;
    font-size: 13px;
    font-weight: 500;
}

.pageBreadcrumb p span {
    padding-right: 20px;
    margin-right: 10px;
    position: relative;
    cursor: pointer;
}

.pageBreadcrumb p span::after {
    content: "\27A4";
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    right: 0;
    color: #a9a9a9;
    font-size: 14px;
    cursor: pointer;
}

.pageBreadcrumb p span:last-child::after {
    display: none;
}

.pageBreadcrumb .btn-create {
    position: absolute;
    top: 50%;
    right: 10px;
    transform: translateY(-50%);
}

.contentList .listHeader {
    position: relative;
    text-align: center;
    color: var(--secondaryColor);
    margin: 0 0 20px;
    font-size: 16px;
    font-weight: 700;
}

.contentList .listHeader .btn {
    position: absolute;
    top: 50%;
    right: 0;
    transform: translateY(-50%);
}

.text-danger {
    color: red;
}

.contentForm {
    position: relative;
    margin: 0 auto;
    padding: 40px 60px;
    background-color: white;
    border-radius: 5px;
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1);
}

.contentForm .btn-customToggleGroup {
    position: absolute;
    right: 60px;
    top: 20px;
}

.contentForm .formHeader {
    position: relative;
    text-align: center;
    color: var(--secondaryColor);
    margin: 0 0 20px;
    font-size: 16px;
    font-weight: 700;
    margin-bottom: 25px;
}

.contentForm .formHeader .btn {
    position: absolute;
    top: 50%;
    right: 0;
    transform: translateY(-50%);
}

.contentForm .form-group {
    margin-bottom: 20px;
}

.contentForm .form-group sup i {
    font-size: 8px;
    margin-left: 5px;
    color: #ff0000;
}

.contentForm .form-group:last-child {
    margin-bottom: 0;
}

.contentForm .form-group .form-label {
    display: block;
    text-align: right;
    padding: 10px 20px 0 0;
    color: var(--contentColor);
    font-size: 0.96em;
}

.contentForm .form-group .form-control {
    width: 100%;
    padding: 10px;
    font-size: 14px;
    color: var(--textColor);
    border: 0.086em solid var(--borderColor);
    border-radius: 4px;
}

.contentForm .form-group .form-control:hover {
    border-color: var(--contentColor);
}

.contentForm .form-group .form-control:focus {
    box-shadow: none;
}

.contentForm .form-group select.form-control {
    padding: 0 20px;
    height: 43px;
    cursor: pointer;
    background-color: white;
}

.contentForm .form-group .inputErrorMsg {
    position: absolute;
    bottom: -15px;
    left: calc(20% + 10px);
    color: var(--secondaryColor);
    font-size: 12px;
    font-weight: 500;
}

.hide {
    opacity: 0;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
}

.hg-20 {
    height: 20px;
}

.hg-40 {
    height: 40px;
}

.position-rel {
    position: relative;
}

.align-items-baseline {
    align-items: baseline;
}

.align-items-end {
    align-items: end;
}

.msgModal {
    position: fixed;
    top: 30%;
    right: 5px;
    z-index: 1000;
}

.msgModal h4 {
    position: relative;
    margin: 0;
    padding: 10px 15px 10px 35px;
    border-radius: 4px;
    font-size: 14px;
    font-weight: 500;
    color: white;
    right: -200px;
    border-radius: 4px;
    transition: all 0.4s ease-in-out;
    animation: successMessage 1s forwards;
}

.msgModal h4 .icon {
    position: absolute;
    top: 50%;
    transform: translatey(-50%);
    left: 10px;
    font-size: 14px;
}

.bg-sucess {
    background-color: #19bc15;
}

.bg-alert {
    background-color: #dc3545;
}

@keyframes successMessage {
    100% {
        right: 10px;
    }
}

.confirmModal {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, .6);
    z-index: 1000;
}

.confirmModal .modalBox {
    padding: 20px;
    border-radius: 4px;
    background-color: white;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    min-width: 30%;
}

.confirmModal .modalBox h4 {
    font-size: 14px;
    color: var(--textColor);
    text-align: center;
}

.pageLoaderBox {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: rgba(255, 255, 255, 1);
    z-index: 6;
}

.alarmListLoader {
    position: relative;
    height: 70px;
    padding: 10px;
}

.pageLoader {
    width: 250px;
    height: 50px;
    line-height: 50px;
    text-align: center;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-transform: uppercase;
    font-weight: 900;
    color: var(--secondaryColor);
    letter-spacing: 0.2em;
}

.pageLoader::before, .pageLoader::after {
    content: "";
    display: block;
    width: 15px;
    height: 15px;
    background-color: var(--secondaryColor);
    position: absolute;
    animation: pageLoader .8s infinite alternate ease-in-out;
}

.pageLoader::before {
    top: 0;
}

.pageLoader::after {
    bottom: 0;
}

@keyframes pageLoader {
    0% {
        left: 0;
        height: 30px;
        width: 15px
    }
    50% {
        height: 8px;
        width: 40px
    }
    100% {
        left: 235px;
        height: 30px;
        width: 15px
    }
}

.ReactTable {
    position: relative;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    border: 1px solid rgba(0, 0, 0, 0.1);
}

.ReactTable * {
    box-sizing: border-box
}

.ReactTable .rt-table {
    -webkit-box-flex: 1;
    -ms-flex: auto 1;
    flex: auto 1;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
    width: 100%;
    border-collapse: collapse;
    overflow: auto
}

.ReactTable .rt-thead {
    -webkit-box-flex: 1;
    -ms-flex: 1 0 auto;
    flex: 1 0 auto;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.ReactTable .rt-thead.-headerGroups {
    background: rgba(0, 0, 0, 0.03);
    border-bottom: 1px solid rgba(0, 0, 0, 0.05)
}

.ReactTable .rt-thead.-filters {
    border-bottom: 1px solid rgba(0, 0, 0, 0.05);
}

.ReactTable .rt-thead.-filters input, .ReactTable .rt-thead.-filters select {
    border: 1px solid rgba(0, 0, 0, 0.1);
    background: #fff;
    padding: 5px 7px;
    font-size: inherit;
    border-radius: 3px;
    font-weight: normal;
    outline-width: 0
}

.ReactTable .rt-thead.-filters .rt-th {
    border-right: 1px solid rgba(0, 0, 0, 0.02)
}

.ReactTable .rt-thead.-header {
    box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.15)
}

.ReactTable .rt-thead .rt-tr {
    text-align: center
}

.ReactTable .rt-thead .rt-th, .ReactTable .rt-thead .rt-td {
    padding: 5px 5px;
    line-height: normal;
    position: relative;
    /* border-right: 1px solid rgba(0, 0, 0, 0.05); */
    transition: box-shadow .3s cubic-bezier(.175, .885, .32, 1.275);
    box-shadow: inset 0 0 0 0 transparent;
}

.ReactTable .rt-thead .rt-th.-sort-asc, .ReactTable .rt-thead .rt-td.-sort-asc {
    box-shadow: inset 0 3px 0 0 rgba(0, 0, 0, 0.6)
}

.ReactTable .rt-thead .rt-th.-sort-desc, .ReactTable .rt-thead .rt-td.-sort-desc {
    box-shadow: inset 0 -3px 0 0 rgba(0, 0, 0, 0.6)
}

.ReactTable .rt-thead .rt-th.-cursor-pointer, .ReactTable .rt-thead .rt-td.-cursor-pointer {
    cursor: pointer
}

.ReactTable .rt-thead .rt-th:last-child, .ReactTable .rt-thead .rt-td:last-child {
    border-right: 0
}

.ReactTable .rt-thead .rt-th:focus {
    outline-width: 0
}

.ReactTable .rt-thead .rt-resizable-header {
    overflow: visible;
    text-align: center;
}

.ReactTable .rt-thead .rt-resizable-header:last-child {
    overflow: hidden
}

.ReactTable .rt-thead .rt-resizable-header-content {
    overflow: hidden;
    text-overflow: ellipsis;
    text-align:center
}

.ReactTable .rt-thead .rt-header-pivot {
    border-right-color: #f7f7f7
}

.ReactTable .rt-thead .rt-header-pivot:after, .ReactTable .rt-thead .rt-header-pivot:before {
    left: 100%;
    top: 50%;
    border: solid transparent;
    content: " ";
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none
}

.ReactTable .rt-thead .rt-header-pivot:after {
     border-color: rgba(255, 255, 255, 0);
     border-left-color: #fff; 
     border-width: 8px; 
    margin-top: -8px
}

.ReactTable .rt-thead .rt-header-pivot:before {
    border-color: rgba(102, 102, 102, 0);
     border-left-color: #f7f7f7; 
     border-width: 10px;
    margin-top: -10px
}

.ReactTable .rt-tbody {
    -webkit-box-flex: 99999;
    -ms-flex: 99999 1 auto;
    flex: 99999 1 auto;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    overflow: auto;
}

.ReactTable .rt-tbody .rt-tr-group {
    border-bottom: solid 1px rgba(0, 0, 0, 0.05);
}

.ReactTable .rt-tbody .rt-tr-group:last-child {
    border-bottom: 0
}

.ReactTable .rt-tbody .rt-td {
    /* border-right: 1px solid rgba(0, 0, 0, 0.02); */
}

.ReactTable .rt-tbody .rt-td:last-child {
    border-right: 0
}

.ReactTable .rt-tbody .rt-expandable {
    cursor: pointer;
    text-overflow: clip
}

.ReactTable .rt-tr-group {
    -webkit-box-flex: 1;
    -ms-flex: 1 0 auto;
    flex: 1 0 auto;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch
}

.ReactTable .rt-tr {
    -webkit-box-flex: 1;
    -ms-flex: 1 0 auto;
    flex: 1 0 auto;
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex
}

.ReactTable .rt-th, .ReactTable .rt-td {
    -webkit-box-flex: 1;
    -ms-flex: 1 0 0px;
    flex: 1 0 0;
    white-space: nowrap;
    text-overflow: ellipsis;
    padding: 7px 5px;
    overflow: hidden;
    transition: .3s ease;
    transition-property: width, min-width, padding, opacity;
}

.ReactTable .rt-th.-hidden, .ReactTable .rt-td.-hidden {
    width: 0 !important;
    min-width: 0 !important;
    padding: 0 !important;
    border: 0 !important;
    opacity: 0 !important
}

.ReactTable .rt-expander {
    display: inline-block;
    position: relative;
    margin: 0;
    color: transparent;
    margin: 0 10px;
}

.ReactTable .rt-expander:after {
    content: '';
    position: absolute;
    width: 0;
    height: 0;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%) rotate(-90deg);
    transform: translate(-50%, -50%) rotate(-90deg);
    border-left: 5.04px solid transparent;
    border-right: 5.04px solid transparent;
    border-top: 7px solid rgba(0, 0, 0, 0.8);
    transition: all .3s cubic-bezier(.175, .885, .32, 1.275);
    cursor: pointer
}

.ReactTable .rt-expander.-open:after {
    -webkit-transform: translate(-50%, -50%) rotate(0);
    transform: translate(-50%, -50%) rotate(0)
}

.ReactTable .rt-resizer {
    display: inline-block;
    position: absolute;
    width: 36px;
    top: 0;
    bottom: 0;
    right: -18px;
    cursor: col-resize;
    z-index: 10
}

.ReactTable .rt-tfoot {
    -webkit-box-flex: 1;
    -ms-flex: 1 0 auto;
    flex: 1 0 auto;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    box-shadow: 0 0 15px 0 rgba(0, 0, 0, 0.15);
}

.ReactTable .rt-tfoot .rt-td {
    border-right: 1px solid rgba(0, 0, 0, 0.05);
}

.ReactTable .rt-tfoot .rt-td:last-child {
    border-right: 0
}

.ReactTable.-striped .rt-tr.-odd {
    background: rgba(0, 0, 0, 0.03)
}

.ReactTable.-highlight .rt-tbody .rt-tr:not(.-padRow):hover {
    background: rgba(0, 0, 0, 0.05)
}

.ReactTable .-pagination {
    z-index: 1;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    padding: 3px;
    box-shadow: 0 0 15px 0 rgba(0, 0, 0, 0.1);
    border-top: 2px solid rgba(0, 0, 0, 0.1);
}

.ReactTable .-pagination input, .ReactTable .-pagination select {
    border: 1px solid rgba(0, 0, 0, 0.1);
    background: #fff;
    padding: 5px 7px;
    font-size: inherit;
    border-radius: 3px;
    font-weight: normal;
    outline-width: 0
}

.ReactTable .-pagination .-btn {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    display: block;
    width: 100%;
    height: 100%;
    border: 0;
    border-radius: 3px;
    padding: 6px;
    font-size: 1em;
    color: rgba(0, 0, 0, 0.6);
    background: rgba(0, 0, 0, 0.1);
    transition: all .1s ease;
    cursor: pointer;
    outline-width: 0;
}

.ReactTable .-pagination .-btn[disabled] {
    opacity: .5;
    cursor: default
}

.ReactTable .-pagination .-btn:not([disabled]):hover {
    background: rgba(0, 0, 0, 0.3);
    color: #fff
}

.ReactTable .-pagination .-previous, .ReactTable .-pagination .-next {
    -webkit-box-flex: 1;
    -ms-flex: 1;
    flex: 1;
    text-align: center
}

.ReactTable .-pagination .-center {
    -webkit-box-flex: 1.5;
    -ms-flex: 1.5;
    flex: 1.5;
    text-align: center;
    margin-bottom: 0;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -ms-flex-pack: distribute;
    justify-content: space-around
}

.ReactTable .-pagination .-pageInfo {
    display: inline-block;
    margin: 3px 10px;
    white-space: nowrap
}

.ReactTable .-pagination .-pageJump {
    display: inline-block;
}

.ReactTable .-pagination .-pageJump input {
    width: 70px;
    text-align: center
}

.ReactTable .-pagination .-pageSizeOptions {
    margin: 3px 10px
}

.ReactTable .rt-noData {
    display: block;
    position: absolute;
    left: 50%;
    top: 50%;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    background: rgba(255, 255, 255, 0.8);
    transition: all .3s ease;
    z-index: 1;
    pointer-events: none;
    padding: 20px;
    color: rgba(0, 0, 0, 0.5)
}

.ReactTable .-loading {
    display: block;
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    background: rgba(255, 255, 255, 0.8);
    transition: all .3s ease;
    z-index: -1;
    opacity: 0;
    pointer-events: none;
}

.ReactTable .-loading>div {
    position: absolute;
    display: block;
    text-align: center;
    width: 100%;
    top: 50%;
    left: 0;
    font-size: 15px;
    color: rgba(0, 0, 0, 0.6);
    -webkit-transform: translateY(-52%);
    transform: translateY(-52%);
    transition: all .3s cubic-bezier(.25, .46, .45, .94)
}

.ReactTable .-loading.-active {
    opacity: 1;
    z-index: 2;
    pointer-events: all;
}

.ReactTable .-loading.-active>div {
    -webkit-transform: translateY(50%);
    transform: translateY(50%)
}

.ReactTable .rt-resizing .rt-th, .ReactTable .rt-resizing .rt-td {
    transition: none !important;
    cursor: col-resize;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none
}

.customReactTableBox {
    width: 100%;
    margin: 0 auto;
}

.customReactTable.ReactTable {
    border: 0;
}

.customReactTable.ReactTable .rt-thead.-filters {
    background-color: white;
    border: 0;
    box-shadow: 0 0 3px rgba(0, 0, 0, 0.1) !important;
    margin-bottom: 5px;
}

.customReactTable.ReactTable .rt-thead.-filters .rt-th {
    /* border-right: 1px solid rgba(0, 0, 0, 0.05) !important; */
    padding: 10px 15px 10px 15px;
}

.customReactTable.ReactTable .rt-thead.-filters .rt-th:last-child {
    /* border-right-color: transparent !important; */
}

.customReactTable.ReactTable .rt-thead.-header {
    box-shadow: none;
    background-color: white;
    margin-bottom: 6px;
}

.customReactTable.ReactTable .rt-thead.-header .rt-th {
    font-size: 14px;
    padding: 10px 15px !important;
    text-align: left;
    color: var(--textColor);
    z-index: 1;
    background-color: var(--tableHeadingBackground);
    border-right-color: rgba(0, 0, 0, 0.05);
    font-weight: 500;
}

.customReactTable.ReactTable .rt-thead.-header .rt-th:first-child {
    border-top-left-radius: 4px;
}

.customReactTable.ReactTable .rt-thead.-header .rt-th:last-child {
    border-top-right-radius: 4px;
}

.customReactTable.ReactTable .rt-tbody .rt-td {
    padding: 9px 15px !important;
    border-right-color: rgba(0, 0, 0, 0.05);
}

.customReactTable.ReactTable .rt-tbody .rt-td:last-child {
    border-right-color: transparent !important;
}

.customReactTable.ReactTable .rt-tbody .rt-tr-group {
    background-color: #ffffff;
    color: var(--textColor);
    font-size: 13px;
    border: 0;
    margin-bottom: 5px;
    box-shadow: 0 0 2px rgba(0, 0, 0, 0.05) !important;
    border-radius: 3px;
    transition: all ease-in-out 0.2s;
}

.customReactTable.ReactTable .rt-tbody .rt-tr-group:hover {
    color: var(--textColor);
    background: rgba(0, 0, 0, 0.01);
    transition: all ease-in-out 0.2s;
}

.customReactTable.ReactTable.hoverCursorDefault .rt-tbody .rt-tr-group:hover {
    cursor: default !important;
}

.customReactTable.ReactTable .-pagination {
    background-color: white;
    box-shadow: none;
    border: 1px solid #f2f0f1;
    padding: 5px;
    border-radius: 3px;
}

.customReactTable.ReactTable .-pagination .-btn {
    background-color: var(--secondaryColor) !important;
    opacity: 1 !important;
    padding: 0;
    position: relative !important;
    width: 100px;
    color: var(--labelColor);
}

.customReactTable.ReactTable .-pagination .-previous .-btn::before, .customReactTable.ReactTable .-pagination .-next .-btn::before {
    content: "\2039";
    font-size: 24px;
    color: var(--labelColor) !important;
    position: absolute;
    top: 0;
    left: 10px;
    line-height: normal;
}

.customReactTable.ReactTable .-pagination .-previous .-btn {
    margin-left: 10px;
    padding-left: 20px;
}

.customReactTable.ReactTable .-pagination .-next .-btn {
    float: right;
    margin-right: 10px;
    padding-right: 20px;
}

.customReactTable.ReactTable .-pagination .-next .-btn::before {
    content: "\203A";
    right: 10px;
    left: initial;
}

.customReactTable.ReactTable .-pagination .-btn[disabled] {
    opacity: 0.5 !important;
    cursor: not-allowed;
}

.customReactTable.ReactTable .-loading {
    background: rgba(255, 255, 255, 0.8);
    z-index: 1;
}

.customReactTable.ReactTable .-loading>div {
    font-size: 24px;
    color: var(--secondaryColor);
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.customReactTable.ReactTable .rt-noData {
    transform: translate(-50%, -50%) !important;
    color: var(--textColor);
    font-size: 16px;
    padding: 5px;
    background-color: white;
}

.customReactTable .button-group {
    position: absolute !important;
}

.table.customHTMLTable {
    border-collapse: separate;
    border-spacing: 0 8px;
    margin-bottom: 0;
}

.table.customHTMLTable thead th {
    border: 0;
    font-size: 0.96em;
    text-align: left;
    color: var(--textColor);
    background-color: var(--tableHeadingBackground);
    border-right: 1px solid rgba(0, 0, 0, 0.05);
    font-weight: 500;
    border-spacing: 10px;
}

.table.customHTMLTable thead th:last-child {
    border-top-right-radius: 4px;
    border-right-color: transparent;
}

.table.customHTMLTable thead th:first-child {
    border-top-left-radius: 4px;
}

.table.customHTMLTable tbody tr {
    background-color: #ffffff;
    border: 0;
    font-size: 0.96em;
    color: var(--contentColor);
    box-shadow: 0 0 2px rgba(0, 0, 0, 0.05) !important;
    border-radius: 3px;
    transition: all ease-in-out 0.2s;
}

.table.customHTMLTable tbody tr:hover {
    background-color: transparent;
    color: var(--textColor);
    transition: all ease-in-out 0.2s;
}

.table.customHTMLTable tbody tr td {
    border: 0;
    border-right: 1px solid rgba(0, 0, 0, 0.05);
}

.table.customHTMLTable tbody tr td:last-child {
    border-right: transparent;
}

.noDataTable {
    font-size: 16px;
    padding: 40px 20px !important;
    text-align: center;
    color: var(--textColor);
}

.cursorNotAllowed {
    cursor: not-allowed;
}

.radioLabel {
    position: relative;
    display: block;
    cursor: pointer;
    padding-left: 30px;
}

.radioLabel .radioText {
    display: inline-block;
    width: 100%;
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
    font-size: 13px;
    line-height: 24px;
    color: var(--contentColor);
}

.radioLabel input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
}

.radiomark {
    position: absolute;
    top: 0;
    left: 0;
    height: 24px;
    width: 24px;
    line-height: 24px;
    border-radius: 50%;
    background-color: white;
    border: 2px solid var(--borderColor);
}

.radiomark::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background-color: white;
    display: none;
}

.radioLabel input[type="radio"]:checked~.radiomark {
    background-color: var(--secondaryColor);
    border: 2px solid black;
}

.radioLabel input[type="radio"]:checked~.radiomark::after {
    display: block;
}

.radioLabel.radioDisabled .radiomark {
    background-color: #cccccc;
}